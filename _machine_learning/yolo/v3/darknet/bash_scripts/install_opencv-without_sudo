#!/bin/bash
##### Rev.1: 2021-01-31 (Sun)
##### Draft: 2021-01-27 (Wed)

# install_opencv-without_sudo
##### This Bash script is an exact replica of `install_opencv` without the leading sudo command
##### Removing sudo is necessary to run this script inside a Docker container.

## 1. Install OpenCV dependencies
apt update
apt upgrade -y

##### Utility tools
apt install -y wget unzip git tree

##### C/C++ compiler, make, compile option, etc.
apt install -y build-essential cmake pkg-config 

##### Image I/O packages for the standard image file formats, e.g.  JPEG, PNG, TIFF, etc
apt -y install libjpeg-dev libpng-dev libtiff-dev

##### E: Unable to locate package libjasper-dev
##### apt -y install libjasper-dev
##### Instead of the above command, download and compile it from the source code
#####   [How to install libjasper-dev on Ubuntu 18 and above](http://flummox-engineering.blogspot.com/2020/02/how-to-install-libjasper-dev-on-ubuntu.html)
wget https://github.com/mdadams/jasper/archive/version-2.0.16.tar.gz -O jasper-version-2.0.16.tar.gz
tar xvf cd jasper-version-2.0.16.tar.gz
cd jasper-version-2.0.16/

mkdir build
export SOURCE_DIR=~/jasper-version-2.0.16
export BUILD_DIR=~/jasper-version-2.0.16/build
cd $BUILD_DIR
cmake -G "Unix Makefiles" -H$SOURCE_DIR -B$BUILD_DIR
cd $BUILD_DIR
make clean all
make test

##### Video I/O Packages I/O packages for camera stream & video files
apt install -y libavcodec-dev libavformat-dev libswscale-dev libv4l-dev v4l-utils libxvidcore-dev libx264-dev

#####  GStreamer for video streaming
apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev 

##### OpenCV’s highgui module relies on the GTK library for GUI operations
apt install -y libgtk-3-dev
##### apt install -y libgtk-3-dev libqt4-dev libqt5-dev

##### OpenGL support
apt install -y mesa-utils libgl1-mesa-dri libgtkgl2.0-dev libgtkglext1-dev

##### Optimization of OpenCV 
apt install -y libatlas-base-dev gfortran libeigen3-dev

##### OpenCV-Python binding
apt-get install -y python3-dev

###### 아래 명령어를 추가했으나 이미 최신 버전이 설치되어 있었음.
###### apt install -y python2.7-dev python3-dev python-numpy python3-numpy

## 2. Install OpenCV

##### Download the installation file
wget https://github.com/opencv/opencv/archive/4.5.1.zip
wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.5.1.zip
unzip opencv_contrib.zip 

##### Verify the download
#####   Expecting `opencv-4.5.1/  opencv_contrib-4.5.1/`
ls -d */

##### Compile it
cd opencv-4.5.1/
mkdir build
cd build/
cmake -D CMAKE_BUILD_TYPE=RELEASE \
> -D CMAKE_INSTALL_PREFIX=/usr/local \
> -D WITH_TBB=OFF \
> -D WITH_IPP=OFF \
> -D WITH_1394=OFF \
> -D BUILD_WITH_DEBUG_INFO=OFF \
> -D BUILD_DOCS=OFF \
> -D INSTALL_C_EXAMPLES=ON \
> -D INSTALL_PYTHON_EXAMPLES=ON \
> -D BUILD_EXAMPLES=OFF \
> -D BUILD_TESTS=OFF \
> -D BUILD_PERF_TESTS=OFF \
> -D WITH_QT=OFF \
> -D WITH_GTK=ON \
> -D WITH_OPENGL=ON \
> -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.5.1/modules \
> -D WITH_V4L=ON  \
> -D WITH_FFMPEG=ON \
> -D WITH_XINE=ON \
> -D BUILD_NEW_PYTHON_SUPPORT=ON \
> -D OPENCV_GENERATE_PKGCONFIG=ON ../

## 3. Verify installation of OpenCV
python -c "import cv2; print(cv2.__version__)"
pkg-config --modversion opencv

## 4. Install darknet
git clone https://github.com/pjreddie/darknet.git
cd darknet
make

## 4. Download yolov3 weights
wget https://pjreddie.com/media/files/yolov3.weights

## 5. Verify the installation of darknet
./darknet detect cfg/yolov3.cfg yolov3.weights data/dog.jpg
##### ./darknet detector demo cfg/coco.data cfg/yolov3.cfg yolov3.weights
