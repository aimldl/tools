#!/bin/bash
# batch_git_pull
#   This script runs `git pull` for all sub-directories of the target repositories.
#
# * Rev.8: 2021-04-05 (Mon)
# * Rev.7: 2021-01-25 (Mon)
# * Rev.6: 2021-01-11 (Mon)
# * Rev.5: 2020-12-15 (Tue)
# * Rev.4: 2020-12-09 (Wed)
# * Rev.3: 2020-11-14 (Sat)
# * Rev.2: 2020-03-01 (Sun)
# * Draft: 2019-11-11 (Mon)
#
# Prerequisites
#   * Understanding of the basic git commands (clone, pull, and push).
#   * The target repositories must be cloned first with the 'git clone' command.
#
# Usage
#   $ chmod +x batch_git_pull
#   $ ./batch_git_pull
#
# Doing it manually
#   You have a Github user ID 'your_id' and 
#       want to clone everything in your repository "my_repository".
#     $ cd ~/github/
#     $ cd my_repository/
#     $ git pull
#
# How to customize this script for yourself
#   Change the list of target_repositories to YOUR target repositories.
#   Say your target repositories are:
#     https://github.com/your_id/my_repository_1
#     https://github.com/your_id/my_repository_2
#       ...
#     https://github.com/your_id/my_repository_n
#   Change the list to:
#     target_repositories="my_repository_1 my_repository_2 ... my_repository_n"
#   Note each value is delimited by a white space.

# You may change this part
public_repositories="aimldl.github.io coding environments pytorch tensorflow keras tools topics_in"
private_repositories="tests projects"
target_repositories="${public_repositories} ${private_repositories}"
# You may change this part

# Don't change this part
print_and_run() {
  COMMAND=$1
  echo $COMMAND
  eval $COMMAND
}

dir_root=${PWD}
for repository in ${target_repositories}; do
  print_and_run "cd ${dir_root}/${repository}"  # cd to the repository's directory
  print_and_run "git pull"                      # pull from the repository
done
# Don't change this part
